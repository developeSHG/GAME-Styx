#ifndef Engine_Enum_h__
#define Engine_Enum_h__

// ID_DYNAMIC : 실시간 업데이트가 필요한 컴포넌트

namespace Engine
{
	/*  Game Screen Mode  */
	enum WINMODE { MODE_FULL, MODE_WIN };


	/*  Object Mgr  */
	enum OBJECTID { OBJECT_BACKGROUND, OBJECT_CATSLE, OBJECT_PRISON, OBJECT_TERRAIN,
					OBJECT_PLAYER, OBJECT_MONSTER,
					OBJECT_ELITE, 
					OBJECT_DAGGER,
					OBJECT_SERVANT_QUEST, OBJECT_SERVANT_RESCUE,
					OBJECT_DOOR, OBJECT_TRUNK, OBJECT_CUPBOARD, OBJECT_TORCH,
					OBJECT_SWORD, OBJECT_BROOM,
					OBJECT_CUTLASS,
					OBJECT_LEVER, OBJECT_GRID,
					OBEJCT_FEATURE, OBJECT_ITEM,
					OBJECT_BUTTON, OBJECT_ITEMLIST,OBJECT_MISSION, OBJECT_TIMER,
					OBJECT_HP, OBJECT_MP, OBJECT_LOWERTEXT, OBJECT_LOWERTEXTTUTO, OBJECT_BLIND,
					OBJECT_CURSOR,
					OBJECT_STATICCAMERA, OBJECT_DYNAMICCAMERA, OBJECT_CAMERAHIERARCHY, OBJECT_SCENEALPHA, OBJECT_END };

	/*  Col Object ID  */
	enum COL_OBJECTID { COL_OBJECT_PLAYER,
						COL_OBJECT_DOOR, COL_OBJECT_CUPBOARD, COL_OBJECT_LEVER, COL_OBJECT_TORCH, COL_OBJECT_TRUNK, COL_OBJECT_GRID,
						COL_OBJECT_ELITE, COL_OBJECT_SERVANT_QUEST, COL_OBJECT_SERVANT_RESCUE,
						COL_OBJECT_MAP, COL_OBJECT_DAGGER, COL_OBJECT_KEY, COL_OBJECT_CUTLASS, COL_OBJECT_POSITION, COL_OBJECT_MYSTERY, COL_OBJECT_POISON,
						COL_OBJECT_CUP,
						COL_OBJECT_SWORD,
						COL_OBJECT_END };


	/*  Component List  */
	enum COMPONENTID { ID_DYNAMIC, ID_STATIC, ID_END };
	enum COMPONENTTYPE { COM_BUFFER, COM_MESH, COM_TEXTURE, COM_TRANSFORM, COM_CALCULATOR, 
						COM_AABB_COLLIDER, COM_OBB_COLLIDER, COM_SPHERE_COLLIDER,
						COM_RENDERER, 
						COM_SHADER_MESH, COM_SHADER_TERRAIN, COM_SHADER_ALPHA,
						COM_NEWSHADER_DEFAULT, COM_NEWSHADER_MESH, COM_NEWSHADER_SKY, COM_NEWSHADER_TERRAIN,
						COM_OPTIMIZATION, COM_NAVIMESH,
						COM_PLAYERBEHAVIOR, COM_ELITEBEHAVIOR,
						COM_MESH_ELITE, COM_TRANSFORM_ELITE,
						COM_END };

	/*  Info of COM_BUFFER   */
	enum BUFFERID { BUFFER_RCCOL, BUFFER_RCTEX, BUFFER_TRICOL, BUFFER_CUBETEX, BUFFER_TERRAINRCTEX, BUFFER_TERRAINTEX, BUFFER_END };

	/*  Info of COM_TRANSFORM   */
	enum INFO	  { INFO_RIGHT, INFO_UP, INFO_LOOK, INFO_POS, INFO_END };
	enum ROTATION { ROT_X, ROT_Y, ROT_Z, ROT_END };

	/*  Info of COM_RENDERER   */
	enum RENDERID { RENDER_PRIORITY, RENDER_NONALPHA, RENDER_ALPHA, RENDER_BLENDTEST, RENDER_LAST, RENDER_UI, RENDER_END };

	/*  Collider Type, Flag  */
	enum COLLIDERTYPE { COL_CUBE, COL_SPHERE, COLLIDER_TYPE_END };
	enum COLLIDERFLAG { COL_AABB_DEST, COL_AABB_SOUR, COL_OBB_DEST, COL_OBB_SOUR, COL_SPHERE_DEST, COL_SPHERE_SOUR, COLLIDER_FLAG_END };

	/*  Collision Active Type  */
	enum COLLTYPE { COL_FALSE, COL_TRUE, COL_END };

	/*  Texture Type  */
	enum TEXTURETYPE { TEX_NORMAL, TEX_CUBE, TEX_END };

	/*  Mesh Type  */
	enum MESHTYPE { TYPE_STATIC, TYPE_DYNAMIC, TYPE_NAVI };

	/*  Navi Type  */
	enum NAVI_TYPE { NAVI_ROAD, NAVI_INSIDE, NAVI_CLIFF, NAVI_TYPE_END };

	/*  Light Mgr  */
	enum LIGHTINDEX
	{
		LIGHT_POINT
	};

	/*  Sound Mgr  */
	enum CHANNELID 
	{
		BGM, PLAYER, SPARK, RAIN, RUN, JUMP, DOWN, ATTACK, 
		DOOR, DRINK, BREAKINGNECK, FIREOFF, FIREPLACE, GRIDUP,
		IMPACT_STONE, PASS_SCENE, PULL_LEVER, SAND_PICKUP,
		SCREAM, SNORE, STARLESS, STATUEMOVE,
		SWORD_CRASH, SWORD_DRAW, TRUNK,
		KEYEFFECT, UI, CAMERA, MAXCHANNEL
	};

	/*  DInput  */
	enum MOUSEKEYSTATE { DIM_LB, DIM_RB, DIM_MB, DIM_END };
	enum MOUSEMOVESTATE { DIMS_X, DIMS_Y, DIMS_Z, DIMS_END };
}



#endif // Engine_Enum_h__
